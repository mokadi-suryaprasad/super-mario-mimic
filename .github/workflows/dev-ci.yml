name: Development CI

on:
  workflow_dispatch:
    inputs:
      trigger-type:
        description: 'Manual trigger reason or type'
        required: false
        default: 'manual'
  pull_request:
    branches:
      - main   # Run checks when raising PR to main
  push:
    branches:
      - main   # Full pipeline after merge

permissions:
  actions: read
  contents: write
  security-events: write   # Needed for CodeQL upload

jobs:
  # -------------------------
  # ✅ PR Validation Job (Pre-merge)
  # Also runs on manual trigger
  # -------------------------
  pr-checks:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Run Unit Tests
        run: npm test

      # CodeQL - fail PR if issues found
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          fail-on-error: true

  # -------------------------
  # ✅ Deployment Job (Post-merge / Trunk Build)
  # Also runs on manual trigger
  # -------------------------
  ci-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build --if-present

      # Upload artifacts to GCS
      - name: Upload build artifacts to GCS
        run: |
          gsutil -m cp -r build/* gs://${{ secrets.GCS_BUCKET_NAME }}/nodejs-app/${{ github.sha }}/

      # Build & Push Docker Image
      - name: Build Docker Image
        run: |
          IMAGE=${{ secrets.GCP_GCR_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/microservicequiz/nodejs-app:dev-${{ github.sha }}
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t $IMAGE .

      - name: Run Trivy Scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'table'
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'beta'

      - name: Push Docker Image
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_GCR_REGION }}-docker.pkg.dev --quiet
          docker push $IMAGE

      # Update Helm values-dev.yaml
      - name: Update Helm values-dev.yaml
        run: |
          git clone https://x-access-token:${{ secrets.HELM_REPO_GITHUB_TOKEN }}@github.com/mokadi-suryaprasad/helm-nodejs-app.git
          cd helm-nodejs-app
          sed -i "s#tag:.*#tag: dev-${{ github.sha }}#g" values-dev.yaml
          git config user.name "M Surya Prasad"
          git config user.email "mspr9773@gmail.com"
          git add values-dev.yaml
          git commit -m "Update dev image tag to dev-${{ github.sha }}" || echo "No changes to commit"
          git push origin HEAD:main
